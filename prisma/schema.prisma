// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Use sqlite as the database
// datasource db {
//   provider = "sqlite"
//   url      = env("DATABASE_URL")
// }

// Use mysql as the database
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  password      String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum TagTypeEnum {
  // General
  ALL
  // Only for blog
  BLOG
  // Only for project
  PROJECT
  // Only for note
  NOTE
}

model Tag {
  name     String      @unique
  slug     String      @unique
  blogs    Blog[]
  projects Project[]
  notes    Note[]
  type     TagTypeEnum @default(ALL)

  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Blog {
  id            String   @id @default(cuid())
  slug          String   @unique
  titleEN       String
  titleZH       String
  descriptionEN String   @db.Text
  descriptionZH String   @db.Text
  bodyEN        String   @db.Text
  bodyZH        String   @db.Text
  cover         String?
  author        String?
  published     Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  tags          Tag[]
  pin           Boolean  @default(false)
}

model Project {
  // Existing fields
  titleEN       String
  titleZH       String
  descriptionEN String  @db.Text
  descriptionZH String  @db.Text
  bodyEN        String  @db.Text
  bodyZH        String  @db.Text
  slug          String  @unique
  codeUrl       String
  previewUrl    String?
  cover         String
  author        String?
  published     Boolean @default(false)
  tags          Tag[]

  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  pin       Boolean  @default(false)
}

model Note {
  body      String  @db.Text
  published Boolean @default(false)
  tags      Tag[]

  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
